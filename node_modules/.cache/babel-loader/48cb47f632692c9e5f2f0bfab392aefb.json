{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { getTvl } from '../yamUtils';\nimport useYam from './useYam';\n\nconst useCalulateTVL = () => {\n  const [tvl, setTvl] = useState(Number.NaN);\n  const yam = useYam();\n  const calculateTvl = useCallback(async () => {\n    setTvl((await getTvl(yam)));\n  }, [yam]);\n  useEffect(() => {\n    calculateTvl();\n    let refreshInterval = setInterval(calculateTvl, 120000);\n    return () => clearInterval(refreshInterval);\n  }, []);\n\n  function refresh() {\n    calculateTvl();\n  }\n\n  return [tvl, refresh];\n};\n\nexport default useCalulateTVL;","map":{"version":3,"sources":["/Users/onceuponaprince/Desktop/beta-master/src/hooks/useCalculateTVL.ts"],"names":["useCallback","useEffect","useState","getTvl","useYam","useCalulateTVL","tvl","setTvl","Number","NaN","yam","calculateTvl","refreshInterval","setInterval","clearInterval","refresh"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,SAAQC,MAAR,QAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,cAAc,GAAG,MAA2B;AAC9C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAACM,MAAM,CAACC,GAAR,CAA9B;AACA,QAAMC,GAAG,GAAGN,MAAM,EAAlB;AAEA,QAAMO,YAAY,GAAGX,WAAW,CAAC,YAAY;AACzCO,IAAAA,MAAM,EAAC,MAAMJ,MAAM,CAACO,GAAD,CAAb,EAAN;AACH,GAF+B,EAE7B,CAACA,GAAD,CAF6B,CAAhC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY;AACZ,QAAIC,eAAe,GAAGC,WAAW,CAACF,YAAD,EAAe,MAAf,CAAjC;AACA,WAAO,MAAMG,aAAa,CAACF,eAAD,CAA1B;AACH,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASG,OAAT,GAAmB;AACfJ,IAAAA,YAAY;AACf;;AACD,SAAO,CAACL,GAAD,EAAMS,OAAN,CAAP;AACH,CAlBD;;AAoBA,eAAeV,cAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nimport {getTvl} from '../yamUtils'\nimport useYam from './useYam'\n\nconst useCalulateTVL = () : [number, ()=>void] => {\n    const [tvl, setTvl] = useState(Number.NaN)\n    const yam = useYam()\n\n    const calculateTvl = useCallback(async () => {\n        setTvl(await getTvl(yam))\n    }, [yam])\n\n    useEffect(() => {\n        calculateTvl()\n        let refreshInterval = setInterval(calculateTvl, 120000)\n        return () => clearInterval(refreshInterval)\n    }, [])\n\n    function refresh() {\n        calculateTvl()\n    }\n    return [tvl, refresh]\n}\n\nexport default useCalulateTVL"]},"metadata":{},"sourceType":"module"}