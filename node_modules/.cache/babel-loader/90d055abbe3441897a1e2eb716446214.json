{"ast":null,"code":"var _jsxFileName = \"/Users/onceuponaprince/Desktop/beta-master/src/views/Farm/components/Stake.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../../../components/Button';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useAllowance from '../../../hooks/useAllowance';\nimport useApprove from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useUnstake from '../../../hooks/useUnstake';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport LoadingButton from \"./LoadingButton\";\nimport HomeCard from \"../../../components/HomeCard\";\nimport HomeCardContent from \"../../../components/HomeCardContent\";\nimport useTokenDecimals from \"../../../hooks/useTokenDecimals\";\n\nconst Stake = ({\n  poolContract,\n  tokenContract,\n  tokenName,\n  tokenAddress,\n  icon\n}) => {\n  const [allowance, refreshAllowance] = useAllowance(tokenContract, poolContract);\n  const {\n    onApprove\n  } = useApprove(tokenContract, poolContract);\n  const tokenBalance = useTokenBalance(tokenContract.options.address);\n  let decimals = useTokenDecimals(tokenAddress);\n  const [stakedBalance, refreshBalance] = useStakedBalance(poolContract); //hack\n\n  const token = tokenName.toLowerCase();\n\n  if (token === \"usdc\" || token === \"usdt\") {\n    decimals = 6;\n  } else if (token === \"wbtc\") {\n    decimals = 8;\n  }\n\n  const {\n    onStake\n  } = useStake(poolContract, tokenName, decimals);\n  const {\n    onUnstake\n  } = useUnstake(poolContract, decimals);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: onStake,\n    onClose: refreshBalance,\n    tokenName: tokenName,\n    operation: \"Stake\",\n    decimals: decimals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    onClose: refreshBalance,\n    tokenName: tokenName,\n    operation: \"Unstake\",\n    decimals: decimals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(HomeCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HomeCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledIconContainer, {\n    width: 100,\n    height: 100,\n    src: icon,\n    style: {\n      marginBottom: -20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance, decimals),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `${tokenName.replace(' SECONDARY', '')} Token Staked`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, !allowance.toNumber() && token === 'auscm-eth secondary' && tokenBalance.toNumber() > 0 ? /*#__PURE__*/React.createElement(LoadingButton, {\n    onClick: onApprove,\n    defaultText: `Approve`,\n    loadingText: \"Approving...\",\n    onSuccess: refreshAllowance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }) : token !== 'auscm-eth secondary' ? /*#__PURE__*/React.createElement(StyledText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 51\n    }\n  }, \"Unavailable\") : /*#__PURE__*/React.createElement(React.Fragment, null, tokenBalance.toNumber() > 0 && /*#__PURE__*/React.createElement(Button, {\n    text: \"Stake\",\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), stakedBalance.toNumber() > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Unstake\",\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  })) : tokenBalance.toNumber() <= 0 && /*#__PURE__*/React.createElement(StyledText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 54\n    }\n  }, \"No available balance\"))))));\n};\n\nconst StyledText = styled.div`\n  color: ${props => props.theme.color.grey[200]};\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n  margin-top: 10px; \n`;\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[4]}px;\n  margin-bottom: ${props => props.theme.spacing[2]}px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 90%;\n`;\nconst StyledIconContainer = styled.img``;\nexport default Stake;","map":{"version":3,"sources":["/Users/onceuponaprince/Desktop/beta-master/src/views/Farm/components/Stake.tsx"],"names":["React","styled","Button","Label","Value","useAllowance","useApprove","useModal","useStake","useStakedBalance","useTokenBalance","useUnstake","getDisplayBalance","DepositModal","LoadingButton","HomeCard","HomeCardContent","useTokenDecimals","Stake","poolContract","tokenContract","tokenName","tokenAddress","icon","allowance","refreshAllowance","onApprove","tokenBalance","options","address","decimals","stakedBalance","refreshBalance","token","toLowerCase","onStake","onUnstake","onPresentDeposit","onPresentWithdraw","marginBottom","replace","toNumber","StyledText","div","props","theme","color","grey","StyledCardHeader","StyledCardActions","spacing","StyledActionSpacer","StyledCardContentInner","StyledIconContainer","img"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\nimport styled from 'styled-components'\n\nimport { Contract } from 'web3-eth-contract'\nimport BigNumber from 'bignumber.js'\n\nimport Button from '../../../components/Button'\nimport Card from '../../../components/Card'\n\nimport Label from '../../../components/Label'\nimport Value from '../../../components/Value'\n\nimport useAllowance from '../../../hooks/useAllowance'\nimport useApprove from '../../../hooks/useApprove'\nimport useModal from '../../../hooks/useModal'\nimport useStake from '../../../hooks/useStake'\nimport useStakedBalance from '../../../hooks/useStakedBalance'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport useUnstake from '../../../hooks/useUnstake'\n\nimport { getDisplayBalance } from '../../../utils/formatBalance'\n\n\nimport DepositModal from './DepositModal'\nimport LoadingButton from \"./LoadingButton\";\nimport AccountModal from \"../../../components/TopBar/components/AccountModal\";\nimport ConfirmModal from \"../../../components/ConfirmModal\";\nimport HomeCard from \"../../../components/HomeCard\";\nimport HomeCardContent from \"../../../components/HomeCardContent\";\nimport useTokenDecimals from \"../../../hooks/useTokenDecimals\";\n\n\ninterface StakeProps {\n  poolContract: Contract,\n  tokenContract: Contract,\n  tokenName: string,\n  tokenAddress: string,\n  icon: string\n}\n\nconst Stake: React.FC<StakeProps> = ({\n  poolContract,\n  tokenContract,\n  tokenName,\n  tokenAddress,\n  icon\n}) => {\n\n  const [allowance, refreshAllowance] = useAllowance(tokenContract, poolContract);\n  const { onApprove } = useApprove(tokenContract, poolContract)\n\n\n  const tokenBalance = useTokenBalance(tokenContract.options.address)\n  let decimals = useTokenDecimals(tokenAddress)\n  const [stakedBalance, refreshBalance] = useStakedBalance(poolContract);\n  //hack\n  const token = tokenName.toLowerCase()\n  if(token ===\"usdc\" || token === \"usdt\"){\n     decimals = 6;\n  } else if (token === \"wbtc\"){\n    decimals = 8;\n  }\n\n  const { onStake } = useStake(poolContract, tokenName, decimals);\n  const { onUnstake } = useUnstake(poolContract, decimals)\n\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={onStake}\n      onClose={refreshBalance}\n      tokenName={tokenName}\n      operation=\"Stake\"\n      decimals={decimals}\n    />\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <DepositModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      onClose={refreshBalance}\n      tokenName={tokenName}\n      operation=\"Unstake\"\n      decimals={decimals}\n    />\n  )\n\n  return (\n    <HomeCard>\n      <HomeCardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <StyledIconContainer width={100} height={100} src={icon} style={{marginBottom: -20}}/>\n            <Value value={getDisplayBalance(stakedBalance, decimals)} />\n            <Label text={`${tokenName.replace(' SECONDARY','')} Token Staked`} />\n          </StyledCardHeader>\n          <StyledCardActions>\n            {(!allowance.toNumber() && token === 'auscm-eth secondary' && tokenBalance.toNumber() > 0) ? (\n              <LoadingButton\n                onClick={onApprove}\n                defaultText={`Approve`}\n                loadingText=\"Approving...\"\n                onSuccess={refreshAllowance}\n              />\n            ) : (\n                token !== 'auscm-eth secondary' ? <StyledText>Unavailable</StyledText> : (\n              <>\n                {tokenBalance.toNumber() > 0 &&\n                <Button text=\"Stake\" onClick={onPresentDeposit}/>\n                }\n                {stakedBalance.toNumber() > 0 ? (\n                    <>\n                      <StyledActionSpacer />\n                      <Button text=\"Unstake\" onClick={onPresentWithdraw}/>\n                    </>\n                ) : (tokenBalance.toNumber() <= 0 && <StyledText>No available balance</StyledText> ) }\n             </>\n               )\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </HomeCardContent>\n    </HomeCard>\n  )\n}\n\nconst StyledText =  styled.div`\n  color: ${props => props.theme.color.grey[200]};\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n  margin-top: 10px; \n`\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[4]}px;\n  margin-bottom: ${props => props.theme.spacing[2]}px;\n  width: 100%;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 90%;\n`\n\nconst StyledIconContainer = styled.img``;\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}