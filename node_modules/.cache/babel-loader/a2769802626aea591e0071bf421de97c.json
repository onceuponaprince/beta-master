{"ast":null,"code":"var _jsxFileName = \"/Users/onceuponaprince/Desktop/beta-master/src/Notifications.tsx\";\nimport PubSub from 'pubsub-js';\nimport { events } from \"./yam/lib/constants\";\nimport { useToasts } from 'react-toast-notifications';\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Notifications = () => {\n  const {\n    addToast,\n    removeToast\n  } = useToasts();\n  const toasts = {};\n\n  function addNotification(optype, id) {\n    if (toasts[optype]) {\n      toasts[optype].push(id);\n    } else {\n      toasts[optype] = [id];\n    }\n  }\n\n  function removeNotification(optype) {\n    if (toasts[optype]) {\n      let id = toasts[optype].shift();\n\n      if (id) {\n        removeToast(id);\n      }\n    }\n  }\n\n  useEffect(() => {\n    PubSub.subscribe(events.transaction.Started, (message, operation) => addToast( /*#__PURE__*/React.createElement(InProgressNotification, {\n      operation: operation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 101\n      }\n    }), {\n      appearance: 'info'\n    }, id => addNotification(operation, id)));\n    PubSub.subscribe(events.transaction.Success, (message, data) => {\n      addToast( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }\n      }, data[0], \" Successful\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https:\\\\\\\\etherscan.io\\\\tx\\\\\" + data[1].transactionHash,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 56\n        }\n      }, \"View on EtherScan\"), \"  \"), {\n        appearance: 'success',\n        autoDismiss: true\n      });\n      removeNotification(data[0]);\n    });\n    PubSub.subscribe(events.transaction.Failed, (message, data) => {\n      addToast( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }\n      }, data[0], \" Failed\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 52\n        }\n      }, data[1]), \"  \"), {\n        appearance: 'error',\n        autoDismiss: true\n      });\n      removeNotification(data[0]);\n    });\n    return () => {\n      PubSub.unsubscribe(events.transaction.Started);\n      PubSub.unsubscribe(events.transaction.Success);\n      PubSub.unsubscribe(events.transaction.Failed);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nconst InProgressNotification = ({\n  operation\n}) => /*#__PURE__*/React.createElement(Centered, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Indlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }\n}, operation, \" in progress \"));\n\nconst Centered = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translate(0%, -50%);\n`;\nconst Indlined = styled.div`\n  display: inline-flex;\n  text-align: left;\n  vertical-align:middle;\n  margin: 35;\n`;\nexport default Notifications;","map":{"version":3,"sources":["/Users/onceuponaprince/Desktop/beta-master/src/Notifications.tsx"],"names":["PubSub","events","useToasts","React","useEffect","styled","Notifications","addToast","removeToast","toasts","addNotification","optype","id","push","removeNotification","shift","subscribe","transaction","Started","message","operation","appearance","Success","data","transactionHash","autoDismiss","Failed","unsubscribe","InProgressNotification","Centered","div","Indlined"],"mappings":"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","sourcesContent":["import PubSub from 'pubsub-js'\nimport {events} from \"./yam/lib/constants\";\nimport { useToasts } from 'react-toast-notifications'\nimport React,{useEffect} from \"react\";\nimport {ScalingSquaresSpinner} from 'react-epic-spinners'\nimport styled from \"styled-components\";\n\n\nconst Notifications : React.FC = () => {\n    const {addToast, removeToast} = useToasts();\n    const toasts: { [optype: string]:string[] } = {};\n\n    function addNotification(optype:string, id:string) {\n        if (toasts[optype]){\n            toasts[optype].push(id);\n        } else {\n            toasts[optype]=[id];\n        }\n\n    }\n\n    function removeNotification(optype:string) {\n        if (toasts[optype]) {\n            let id = toasts[optype].shift();\n            if (id){\n                removeToast(id);\n            }\n        }\n    }\n\n    useEffect(() => {\n\n        PubSub.subscribe(events.transaction.Started, (message:string, operation:string) => addToast(<InProgressNotification operation={operation}/> , { appearance: 'info' }, (id:string) => addNotification(operation, id)));\n        PubSub.subscribe(events.transaction.Success, (message:string, data:any[]) => {\n            addToast(<div> <p>{data[0]} Successful</p> <a href={\"https:\\\\\\\\etherscan.io\\\\tx\\\\\"+data[1].transactionHash} target=\"_blank\" >View on EtherScan</a>  </div>, { appearance: 'success', autoDismiss: true });\n            removeNotification(data[0]);\n        });\n        PubSub.subscribe(events.transaction.Failed, (message:string, data:string[]) => {\n            addToast(<div> <p>{data[0]} Failed</p> <a>{data[1]}</a>  </div>, { appearance: 'error', autoDismiss: true });\n            removeNotification(data[0]);\n        });\n\n        return () => {\n            PubSub.unsubscribe(events.transaction.Started)\n            PubSub.unsubscribe(events.transaction.Success)\n            PubSub.unsubscribe(events.transaction.Failed)\n        }\n    }, [])\n    return <></>\n}\n\ninterface ProgressNotificationProps {\n    operation: string;\n}\n\nconst InProgressNotification: React.FC<ProgressNotificationProps> = ({ operation }) => (\n    <Centered>\n        <Indlined>{operation} in progress </Indlined>\n        {/*<Indlined><ScalingSquaresSpinner size={20} color='#3399ff' /></Indlined>*/}\n    </Centered>\n)\n\nconst Centered =styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translate(0%, -50%);\n`\n\nconst Indlined = styled.div`\n  display: inline-flex;\n  text-align: left;\n  vertical-align:middle;\n  margin: 35;\n`\n\nexport default Notifications"]},"metadata":{},"sourceType":"module"}