{"ast":null,"code":"var _jsxFileName = \"/Users/onceuponaprince/Desktop/beta-master/src/views/Farm/components/DepositModal.tsx\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport LoadingButton from \"./LoadingButton\";\nimport styled from \"styled-components\";\n\nconst DepositModal = ({\n  max,\n  onConfirm,\n  onClose,\n  onDismiss,\n  tokenName = '',\n  operation,\n  decimals\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals);\n  }, [max]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  function onFinish() {\n    onDismiss();\n    if (onClose) onClose();\n  }\n\n  function isValueValid() {\n    let value = parseFloat(val);\n    if (isNaN(value) || value <= 0) return false;\n    return true;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `${operation}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(TokenInput, {\n    value: val,\n    onSelectMax: handleSelectMax,\n    onChange: handleChange,\n    max: fullBalance,\n    symbol: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoadingButton, {\n    onClick: () => onConfirm(val),\n    onSuccess: onFinish,\n    defaultText: `${operation}`,\n    loadingText: \"Confirming\",\n    disabled: !isValueValid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Cancel\",\n    variant: \"secondary\",\n    onClick: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst StyledModalWrapper = styled.div`\n  \n  border: 1px solid #ffe58d;\n  box-shadow: 3px 1px 10px #dbb442;\n  min-width: 500px;   \n  \n  @media (max-width: 950px) {\n    min-width: 90%;\n    max-width: 90%;\n   \n  }\n  \n`;\nexport default DepositModal;","map":{"version":3,"sources":["/Users/onceuponaprince/Desktop/beta-master/src/views/Farm/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","ModalTitle","TokenInput","getFullDisplayBalance","LoadingButton","styled","DepositModal","max","onConfirm","onClose","onDismiss","tokenName","operation","decimals","val","setVal","fullBalance","handleChange","e","currentTarget","value","handleSelectMax","onFinish","isValueValid","parseFloat","isNaN","StyledModalWrapper","div"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\n\nimport Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal'\nimport ModalActions from '../../../components/ModalActions'\nimport ModalTitle from '../../../components/ModalTitle'\nimport TokenInput from '../../../components/TokenInput'\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport LoadingButton from \"./LoadingButton\";\nimport styled from \"styled-components\";\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber,\n  decimals: number,\n  onConfirm: (amount: string) => Promise<boolean>,\n  onClose: ()=>void,\n  tokenName?: string,\n  operation: string,\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm,onClose, onDismiss, tokenName = '' , operation, decimals}) => {\n  const [val, setVal] = useState('')\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals)\n  }, [max])\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value)\n  }, [setVal])\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n    function onFinish(){\n        onDismiss();\n        if(onClose)\n            onClose();\n    }\n\n    function isValueValid() : boolean {\n      let value = parseFloat(val);\n      if(isNaN(value) || value <= 0)\n          return false;\n      return true;\n  }\n\n\n  return (\n      <StyledModalWrapper>\n        <Modal>\n         {/*<ModalTitle text={`${operation} ${tokenName}`} />*/}\n         <ModalTitle text={`${operation}`} />\n\n          <TokenInput\n            value={val}\n            onSelectMax={handleSelectMax}\n            onChange={handleChange}\n            max={fullBalance}\n            symbol={tokenName}\n          />\n          <ModalActions>\n            <LoadingButton onClick={()=>onConfirm(val)} onSuccess={onFinish} defaultText={`${operation}`} loadingText={\"Confirming\"} disabled={!isValueValid()}/>\n            <Button text=\"Cancel\" variant=\"secondary\" onClick={onFinish} />\n\n          </ModalActions>\n        </Modal>\n      </StyledModalWrapper>\n  )\n}\n\nconst StyledModalWrapper = styled.div`\n  \n  border: 1px solid #ffe58d;\n  box-shadow: 3px 1px 10px #dbb442;\n  min-width: 500px;   \n  \n  @media (max-width: 950px) {\n    min-width: 90%;\n    max-width: 90%;\n   \n  }\n  \n`;\nexport default DepositModal\n"]},"metadata":{},"sourceType":"module"}